scalar Date

type Query {
  usuarios: [Usuario!]
  proyectos: [Proyecto]
  proyectosLider(id_lider: ID!): [Proyecto]
  proyectoId(_id: ID!): [Proyecto]
}

type Usuario {
  _id: ID!
  cedula: String!
  nombre: String!
  correo: String!
  contrasena: String!
  rol: String!
  estado: String!
}
# Manera de hacer un create.
input InputUsuario {
  cedula: String
  nombre: String
  correo: String
  contrasena: String
  rol: String
  estado: String
}

input InputLogin {
  correo: String!
  contrasena: String!
}

type InscripEstudiante {
  _id: ID!
  id_estudiante: ID!
  nombre_estudiante: String!
  estado: String!
}

type Mutation {
  login(content: InputLogin!): Usuario
  # Se llama al InputUsuario y se especifica que ese sera el contenido.
  createUsuario(content: InputUsuario!): Usuario
  updateUsuario(
    _id: ID
    cedula: String!
    nombre: String!
    correo: String!
    contrasena: String!
    rol: String!
    estado: String!
  ): Usuario
  editUsuario(
    _id: ID!
    cedula: String
    nombre: String
    correo: String
    contrasena: String
    rol: String
    estado: String
  ): Usuario

  addAvance(_id: String, content: agregarAvance!): Avances

  editEstadoInscripcion(
    id_proyecto: ID!
    id_inscripcion: ID!
    nuevoEstado: String!
  ): Proyecto

  agregarInscripcion(
    _id: ID!
    id_estudiante: String!
    nombre_estudiante: String!
    estado: String!
  ): Proyecto

  createProyecto(
    nombre_proyecto: String!
    objetivos_generales: String!
    objetivos_especificos: String!
    presupuesto: Int!
    fecha_ini: Date
    fecha_final: Date
    id_lider: String!
    nombre_lider: String!
    estado_inscripcion: String!
    estado_proyecto: String
    fase: String
  ): Proyecto

  editProyecto(
    _id: ID!
    nombre_proyecto: String
    objetivos_generales: String
    objetivos_especificos: String
    presupuesto: Int
    fecha_ini: Date
    fecha_final: Date
    id_lider: String
    nombre_lider: String
    estado_inscripcion: String
    estado_proyecto: String
    fase: String
  ): Proyecto
}

type Proyecto {
  _id: ID!
  nombre_proyecto: String!
  objetivos_generales: String!
  objetivos_especificos: String!
  presupuesto: Int!
  fecha_ini: Date
  fecha_final: Date
  id_lider: String!
  nombre_lider: String!
  estado_inscripcion: String!
  estado_proyecto: String
  fase: String
  inscripciones_estudiantes: [InscripEstudiante]
  avances: [Avances]
}

type Avances {
  _id: ID!
  id_estudiante: ID!
  nombre_estudiante: String!
  descripcion: String!
  observaciones: String
}

input agregarAvance {
  id_estudiante: ID!
  nombre_estudiante: String!
  descripcion: String!
  observaciones: String
}
